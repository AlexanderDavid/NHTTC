#!/usr/bin/env python

import sys
import rosbag
import math
from shapely.geometry import Polygon

def path_length(path_sim):
    prev_x = None
    prev_y = None
    act_dist = 0
    for x, y in path_sim:
        if(prev_x is not None):
            act_dist += math.sqrt((x - prev_x)**2 + (y - prev_y)**2)
        prev_x = x
        prev_y = y
    return act_dist

def open_bag(filepath, bag_name):
    try:
        return rosbag.Bag(filepath)
    except rosbag.ROSBagException:
        print("Error: " + bag_name + " bag not readable!")
        sys.exit(1)

def read_messages(bag, topic_list, car_names, msg_list):
    for topic, msg, t in bag.read_messages(topics=topic_list):
        agent_idx = car_names.index(topic[4:-9])
        msg_list[agent_idx].append((msg.pose.position.x, msg.pose.position.y))
    bag.close()

if len(sys.argv) != 3:
    print("Usage: ./perf_eval <path_to_sim_bag> <path_to_real_bag>")
    sys.exit(2)
    
sim_bag = open_bag(sys.argv[1], "sim")
real_bag = open_bag(sys.argv[2], "real")

count = 2  # number of cars in sim/real
car_sim_name = [str(i + 1) for i in range(count)]
car_real_name = ["30", "38"]

sim_paths = [[] for i in range(count)]
real_paths = [[] for i in range(count)]

sim_topics = []
real_topics = []

for i in range(count):
    sim_topics.append("/car" + str(i + 1) + "/car_pose")
    real_topics.append("/car" + car_real_name[i] + "/car_pose")

read_messages(sim_bag, sim_topics, car_sim_name, sim_paths)
read_messages(real_bag, real_topics, car_real_name, real_paths)

sim_path_lengths = [path_length(path) for path in sim_paths]

for path in real_paths:
    path.reverse()

path_polygons = [sim_path + real_path for sim_path, real_path in zip(sim_paths, real_paths)]

print("Lengths: " + reduce(lambda x, y: str(x) + " " + str(y), sim_path_lengths))

areas = [Polygon(path_polygon).area for path_polygon in path_polygons]
avg_ctes = [area / length for area, length in zip(areas, sim_path_lengths)]

print("Average CTEs: " + reduce(lambda x, y: str(x) + " " + str(y), avg_ctes))
